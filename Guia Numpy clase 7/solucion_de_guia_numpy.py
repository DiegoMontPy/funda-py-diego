# -*- coding: utf-8 -*-
"""Solucion de guia NumPy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qlRQ0PRkTXW9EEBXTU3OkDlYKP1R1Sdv
"""

'''
Clase:        7
Tema:         Numpy
Ejercicio:    Guia de numpy
Descripcion:  Completar la guia y el cuestionario de trabajo

Autor:        Diego Emilio Garcia Montano
Fecha:        2025-06-3
Estado:       [Terminado]
'''


import numpy as np

consumo = np.array([
    [12.5, 13.2, 11.9, 14.0, 13.5, 15.0, 14.3],
    [10.1, 10.5, 10.0, 11.2, 11.5, 12.0, 11.8],
    [14.0, 14.2, 13.9, 15.5, 15.1, 16.0, 15.8],
    [9.0, 9.2, 8.9, 9.5, 9.8, 10.0, 9.7],
    [16.2, 16.5, 16.0, 17.1, 17.4, 18.0, 17.8],
    [11.0, 11.3, 11.1, 12.0, 12.4, 12.8, 12.5],
    [13.5, 13.8, 13.2, 14.1, 14.6, 15.0, 14.9],
    [10.8, 11.0, 10.6, 11.5, 11.8, 12.2, 12.0],
    [15.1, 15.5, 15.0, 16.0, 16.4, 17.0, 16.7],
    [8.5, 8.7, 8.4, 9.0, 9.2, 9.5, 9.3],
])

print('Dimensiones:',consumo.ndim)
print('forma:', consumo.shape)
print('Tipo de datos:', consumo.dtype)
print('Consumo primer hogar:', consumo[0])
print('Consumo el miercoles (dia 3):', consumo[:, 2])

promedio_por_hogar = np.mean(consumo, axis=1)

promedio_por_dia = np.mean(consumo, axis=0)

total_consumo = np.sum(consumo)

print()
print('consumo promedio por hogar:',promedio_por_hogar)
print()
print('consumo promedio por dia:',promedio_por_dia)
print()
print('consumo total:',total_consumo)


maximos = np.max(consumo, axis=1)

minimos = np.min(consumo, axis=0)

desviacion = np.std(consumo)

print()
print('Maximo por hogar:',maximos)
print('Minimo por dia:', minimos)
print('desviacion estandar global:', desviacion)

consumo_total_hogar = np.sum(consumo, axis=1)

hogar_mayor_consumo = np.argmax(consumo_total_hogar)

hogar_mas_eficiente = np.argmin(consumo_total_hogar)

print()
print('Consumo total por hogar:', consumo_total_hogar)
print('Hogar con mayor consumo:', hogar_mayor_consumo)
print('Hogar mas eficiente:', hogar_mas_eficiente)

print()
consumo_total_hogar = np.sum(consumo, axis=1)

print(f'Consumo total de cada hogar durante la semana: {consumo_total_hogar}')

altos = consumo_total_hogar > 100

consumo_mayor_100 = np.where(altos)[0]

print(f'ids de hogares con consumo mayor a 100: {consumo_mayor_100}')

print()
consumo_normalizado = (consumo - consumo.min()) / (consumo.max() - consumo.min())

print('Consumo normalizado:',consumo_normalizado)

print()
print('Cuestionario de trabajo:')
print('1. ¿Cuál es el consumo del hogar 5 el viernes (día 5)?')
print('Consumo del hogar 5 el viernes (dia 5):', consumo[4, 4])

print()

print('2. Usando indexación, muestra el consumo de los últimos 3 hogares el domingo.')
print('Consumo de los ultimos 3 hogares el domingo:', consumo[-3:, 6])

print()

print('3. Calcula el promedio de consumo los fines de semana (sábado y domingo, columnas 5 y 6).')
print('Promedio de consumo los fines de semana (sábado y domingo):', np.mean(consumo[:, 5:7]))

print()

print('4. ¿Qué día de la semana tiene la mayor desviación estándar entre hogares? Explica qué indica esto.')
desviacion_por_dia = np.std(consumo, axis=0)
dia_mayor_desviacion = np.argmax(desviacion_por_dia)
print('Día con mayor desviación estándar entre hogares:', dia_mayor_desviacion)

print()

print('5. Identifica los 3 hogares con menor consumo total durante la semana. Muestra sus índices y valores.')
consumo_total_hogar = np.sum(consumo, axis=1)
indices_menor_consumo = np.argsort(consumo_total_hogar)[:3]
valores_menor_consumo = consumo_total_hogar[indices_menor_consumo]
print('Índices de los 3 hogares con menor consumo total:', indices_menor_consumo)
print('Valores de consumo total de esos hogares:', valores_menor_consumo)

print()

print('6. Si el hogar 3 aumenta su consumo en un 10% cada día, ¿cuál sería su nuevo consumo total semanal?')
consumo_hogar3_original = consumo[2]
consumo_hogar3_aumentado = consumo_hogar3_original * 1.10
nuevo_total_hogar3 = np.sum(consumo_hogar3_aumentado)
print('El nuevo consumo total semanal del hogar 3 con aumento del 10% diario:', nuevo_total_hogar3)